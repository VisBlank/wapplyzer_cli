// strict, yes strict
'use strict';

// const path, spawn child_process
// phantomjs_prebuilt, head less browser.
const
	path      = require('path'),
	spawn     = require('child_process').spawn,
	phantomjs = require('phantomjs-prebuilt');

// exports
// run is a func will get args and callback
//
exports.run = function(args, callback) {
	// get input args
	// unshift one
	// path join with /
	// driver.js
	args.unshift(path.join(__dirname, 'driver.js'));

	// pathonjs with path get args, spawn
	// get a new driver
	var driver = spawn(phantomjs.path, args);

	// driver std output
	// on some data
	// we have data
	// then callback to do some data
	driver.stdout.on('data', (data) => {
		callback(`${data}`, null);
	});

	// driver has error when on data
	// again callback (callback can do data or error)
	driver.stderr.on('data', (data) => {
		callback(null, `${data}`);
	});
}

if ( !module.parent ) {
	exports.run(process.argv.slice(2), function(stdout, stderr) {
		if ( stdout ) {
			process.stdout.write(stdout);
		}

		if ( stderr ) {
			process.stderr.write(stderr);
		}
	});
}
